# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-16.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Tag
        run: git tag v15.1
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y git \
                    build-essential pkg-config \
                    autoconf automake libtool \
                    bison flex libpq-dev \
                    libunwind-dev parallel \
                    clang-8 \
                    gcc-6 g++-6 cpp-6 \
                    libc++-8-dev libc++abi-8-dev unzip curl

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
              
      - name: Build the app    
        run: |
          export ENV CC=clang-8
          export ENV CXX=clang++-8
          export ENV CFLAGS="-O3 -g1 -fno-omit-frame-pointer"
          export ENV CXXFLAGS="$CFLAGS -stdlib=libc++" 
           ./autogen.sh
           ./configure  
           make
           sudo make install
           mkdir /opt/digitalbits
           sudo cp /usr/local/bin/digitalbits-core /opt/digitalbits/digitalbits-core     
                
      - name: Release
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_KEY }}
          export AWS_DEFAULT_REGION=eu-central-1

          aws s3 sync /opt/digitalbits/ s3://digitalbits-bin/core/
